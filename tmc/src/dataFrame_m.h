//
// Generated file, do not edit! Created by nedtool 5.6 from src/dataFrame.msg.
//

#ifndef __DATAFRAME_M_H
#define __DATAFRAME_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>src/dataFrame.msg:1</tt> by nedtool.
 * <pre>
 * packet metaFrame
 * {
 *     int findCount;        //  feedback hop values
 *     int hop2Sink;        //  feedback hop values
 *     int actualHop;       // actual hops
 *     int destinationId;   // sinkNode
 *     int nextHopId;       // next node
 *     int sourceId;        // origin node
 *     int senderId;        // sender node
 *     int msgType;         // packets or acks
 *     int msgID;           // unique numbers of packets from source node
 *     int chargeSlot;      // indicate the senders'charging time 
 *     int endTrans;        // indicate the senders'charging time 
 *     simtime_t sendTime;  // recording sending time
 * }
 * </pre>
 */
class metaFrame : public ::omnetpp::cPacket
{
  protected:
    int findCount;
    int hop2Sink;
    int actualHop;
    int destinationId;
    int nextHopId;
    int sourceId;
    int senderId;
    int msgType;
    int msgID;
    int chargeSlot;
    int endTrans;
    ::omnetpp::simtime_t sendTime;

  private:
    void copy(const metaFrame& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const metaFrame&);

  public:
    metaFrame(const char *name=nullptr, short kind=0);
    metaFrame(const metaFrame& other);
    virtual ~metaFrame();
    metaFrame& operator=(const metaFrame& other);
    virtual metaFrame *dup() const override {return new metaFrame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getFindCount() const;
    virtual void setFindCount(int findCount);
    virtual int getHop2Sink() const;
    virtual void setHop2Sink(int hop2Sink);
    virtual int getActualHop() const;
    virtual void setActualHop(int actualHop);
    virtual int getDestinationId() const;
    virtual void setDestinationId(int destinationId);
    virtual int getNextHopId() const;
    virtual void setNextHopId(int nextHopId);
    virtual int getSourceId() const;
    virtual void setSourceId(int sourceId);
    virtual int getSenderId() const;
    virtual void setSenderId(int senderId);
    virtual int getMsgType() const;
    virtual void setMsgType(int msgType);
    virtual int getMsgID() const;
    virtual void setMsgID(int msgID);
    virtual int getChargeSlot() const;
    virtual void setChargeSlot(int chargeSlot);
    virtual int getEndTrans() const;
    virtual void setEndTrans(int endTrans);
    virtual ::omnetpp::simtime_t getSendTime() const;
    virtual void setSendTime(::omnetpp::simtime_t sendTime);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const metaFrame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, metaFrame& obj) {obj.parsimUnpack(b);}


#endif // ifndef __DATAFRAME_M_H

